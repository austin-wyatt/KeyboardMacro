#pragma once

#define DOS_DEVICE_NAME L"\\DosDevices\\KeyboardMacroInterface"
#define DOS_DEVICE_PATH L"\\\\.\\KeyboardMacroInterface"

#define OUTPUT_BUFFER_SIZE 10
#define OUTPUT_BUFFER_INDEX_SIZE sizeof(OUTPUT_BUFFER_STRUCT)
#define OUTPUT_BUFFER_SIZE_BYTES OUTPUT_BUFFER_INDEX_SIZE * OUTPUT_BUFFER_SIZE //TODO
#define OUTPUT_BUFFER_STRUCT KEYBOARD_INPUT_DATA

#define KEYBOARD_DEVICES_MAX_LENGTH 10

typedef struct _MACRO_REQUEST
{
	int Code;
	long long Data;
} MACRO_REQUEST, *PMACRO_REQUEST;

//The next read request will return a list of int IDs
#define MACRO_REQUEST_GET_KEYBOARDS 0x1 
//pass the ID of the keyboard to register in the Data field
#define MACRO_REQUEST_REGISTER_KEYBOARD 0x2 
#define MACRO_REQUEST_CANCEL_CALLBACK 0x3
#define MACRO_REQUEST_UNREGISTER_KEYBOARD 0x4

//the driver will hold this request until data becomes available
//when completed, the next read will be the available data
#define MACRO_REQUEST_SET_CALLBACK 0x123456 

#define MACRO_RESPONSE_EMPTY 0x0
#define MACRO_RESPONSE_KEY_DATA 0x1
#define MACRO_RESPONSE_KEYBOARD_DATA 0x2
//#define MACRO_RESPONSE_KEYBOARD_DATA 0x4
//#define MACRO_RESPONSE_KEYBOARD_DATA 0x8
//#define MACRO_RESPONSE_KEYBOARD_DATA 0x10
//#define MACRO_RESPONSE_KEYBOARD_DATA 0x20

#define MACRO_RESPONSE_NO_ACTION_TAKEN 0xa000000
#define MACRO_RESPONSE_CALLBACK_CANCELED 0xb000000
#define MACRO_RESPONSE_NO_REGISTERED_KEYBOARD 0xc000000
#define MACRO_RESPONSE_FAILURE 0xF000000

#define MACRO_RESPONSE_FLAG_AVAILABLE 0x10000
#define MACRO_RESPONSE_FLAG_NO_RENEW 0x20000

#define MACRO_RESPONSE_KEY_DATA_AVAILABLE (MACRO_RESPONSE_KEY_DATA | MACRO_RESPONSE_FLAG_AVAILABLE)
#define MACRO_RESPONSE_KEYBOARD_DATA_AVAILABLE (MACRO_RESPONSE_KEYBOARD_DATA | MACRO_RESPONSE_FLAG_AVAILABLE)

